<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3ba91f09-91fd-403b-afd9-29e9a64dbdf5" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/fixtures/mock.fixture.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/types/sideMenu.types.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ui/pages/base.page.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ui/pages/customers/customer-details.page.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ui/pages/customers/edit-customer.page.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ui/pages/sideMenu.page.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ui/tests/SalesPortal/customers/integration/customers.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ui/tests/SalesPortal/customers/integration/details.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/utils/date.utils.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/.package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/.package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/api/apiClients/request.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/api/apiClients/request.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/api/controllers/customers.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/api/controllers/customers.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/config/api-config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/config/api-config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fixtures/businessSteps.fixtures.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/fixtures/businessSteps.fixture.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fixtures/controllers.fixture.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/fixtures/controllers.fixture.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fixtures/pages.fixtures.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/fixtures/pages.fixtures.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/types/api.types.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/types/api.types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/types/customer.types.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/types/customer.types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ui/pages/customers/customers.page.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/ui/pages/customers/customers.page.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ui/pages/home.page.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/ui/pages/home.page.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ui/pages/salesPortal.page.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/ui/pages/salesPortal.page.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ui/tests/SalesPortal/customers/delete-new-customer.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/ui/tests/SalesPortal/customers/delete-new-customer.spec.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2xQGN5tqnlpCEUiQS1Z4toi8FYM" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Playwright.UI] [Sales Portal] [Customers] (1).executor": "Run",
    "Playwright.UI] [Sales Portal] [Customers].Should check created customer in table.executor": "Run",
    "Playwright.UI] [Sales Portal] [Customers].Should check filtered by country table data.executor": "Run",
    "Playwright.UI] [Sales Portal] [Customers].Should check that new customer in table successfully deleted.executor": "Run",
    "Playwright.UI] [Sales Portal] [Customers].executor": "Run",
    "Playwright.[API] [Customers] [Create].Create customer with smoke data and Controller.executor": "Run",
    "Playwright.[API] [Customers] [Create].Create customer with smoke data and controllers.executor": "Run",
    "Playwright.[API] [Customers] [Create].Create customer with smoke data.executor": "Run",
    "Playwright.[API] [Customers] [Delete].Should delete customer with controllers.executor": "Run",
    "Playwright.[API] [Customers] [Delete].Should delete customer.executor": "Run",
    "Playwright.[API] [Customers] [Get By Id].Should get created customer by id.executor": "Run",
    "Playwright.[API] [Customers] [Get By Id].[Controllers] Should get created customer by id.executor": "Run",
    "Playwright.[API] [Customers] [Sign In].Sign in with exist user.executor": "Run",
    "Playwright.[API] [Customers] [Sign In].[Sign In Controller] Sign in with exist user.executor": "Run",
    "Playwright.[API] [Customers] [Sign In].executor": "Run",
    "Playwright.[API] [Customers] [Update].Update customer with smoke data.executor": "Run",
    "Playwright.[API] [Customers] [Update].[Controllers] Update customer with smoke data.executor": "Run",
    "Playwright.[UI] [Customers] [Details].Should display valid customer data.executor": "Run",
    "Playwright.[UI] [Customers] [Table component].executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with already created user.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with empty password.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with empty username.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with long password.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with long username.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with password all spaces.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with postfix username.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with prefix password.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with prefix username.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with short username.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with uppercase password.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Negative cases for registration.Register with username all spaces.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Register new user.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Registration with negative cases.Register with empty fields.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.Registration with negative cases.executor": "Run",
    "Playwright.[UI] [Demo Login Form] Registration.executor": "Run",
    "Playwright.[UI] [Sales Portal] [Customers].executor": "Run",
    "Playwright.table.spec.ts.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "hw-25",
    "last_opened_file_path": "/Users/bahdanshamukou/Documents/aqa_course_playwright",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "reference.settingsdialog.project.grazie",
    "ts.external.directory.path": "/Users/bahdanshamukou/Documents/aqa_course_playwright/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/utils/validations" />
      <recent name="$PROJECT_DIR$/src/data" />
      <recent name="$PROJECT_DIR$/src/ui/tests/homework" />
      <recent name="$PROJECT_DIR$/src/ui/pages/modals/customers" />
      <recent name="$PROJECT_DIR$/src/ui/pages/customers" />
    </key>
  </component>
  <component name="RunManager" selected="Playwright.[UI] [Customers] [Details].Should display valid customer data">
    <configuration name="[API] [Customers] [Get By Id].[Controllers] Should get created customer by id" type="JavaScriptTestRunnerPlaywright" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <playwright-package value="$PROJECT_DIR$/node_modules/@playwright/test" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/api/tests/customers/getByID.spec.ts" />
      <test-names>
        <test-name value="[API] [Customers] [Get By Id]" />
        <test-name value="[Controllers] Should get created customer by id" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="[API] [Customers] [Update].Update customer with smoke data" type="JavaScriptTestRunnerPlaywright" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <playwright-package value="$PROJECT_DIR$/node_modules/@playwright/test" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/api/tests/customers/update.spec.ts" />
      <test-names>
        <test-name value="[API] [Customers] [Update]" />
        <test-name value="Update customer with smoke data" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="[API] [Customers] [Update].[Controllers] Update customer with smoke data" type="JavaScriptTestRunnerPlaywright" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <playwright-package value="$PROJECT_DIR$/node_modules/@playwright/test" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/api/tests/customers/update.spec.ts" />
      <test-names>
        <test-name value="[API] [Customers] [Update]" />
        <test-name value="[Controllers] Update customer with smoke data" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="[UI] [Customers] [Details].Should display valid customer data" type="JavaScriptTestRunnerPlaywright" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <playwright-package value="$PROJECT_DIR$/node_modules/@playwright/test" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/ui/tests/SalesPortal/customers/integration/details.spec.ts" />
      <test-names>
        <test-name value="[UI] [Customers] [Details]" />
        <test-name value="Should display valid customer data" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="[UI] [Customers] [Table component]" type="JavaScriptTestRunnerPlaywright" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <playwright-package value="$PROJECT_DIR$/node_modules/@playwright/test" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/ui/tests/SalesPortal/customers/integration/customers.spec.ts" />
      <test-names>
        <test-name value="[UI] [Customers] [Table component]" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Playwright.[UI] [Customers] [Details].Should display valid customer data" />
        <item itemvalue="Playwright.[UI] [Customers] [Table component]" />
        <item itemvalue="Playwright.[API] [Customers] [Update].[Controllers] Update customer with smoke data" />
        <item itemvalue="Playwright.[API] [Customers] [Update].Update customer with smoke data" />
        <item itemvalue="Playwright.[API] [Customers] [Get By Id].[Controllers] Should get created customer by id" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-WS-243.23654.120" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3ba91f09-91fd-403b-afd9-29e9a64dbdf5" name="Changes" comment="" />
      <created>1747862841029</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1747862841029</updated>
      <workItem from="1747862842246" duration="13528000" />
      <workItem from="1748641571496" duration="2756000" />
      <workItem from="1748644340187" duration="11265000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>